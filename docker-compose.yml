version: '3.7'
services:
  training-service:
    build:
      context: ./services/training-service
      dockerfile: Dockerfile
    volumes:
      - './services/training-service:/usr/src/app'
    ports:
      - 6004:6000
    environment:
      - FLASK_APP=src/__init__.py
      - FLASK_ENV=development
      - APP_SETTINGS=src.config.DevelopmentConfig
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgresql://admin:admin@database:5432/mrs
    depends_on:
      - "database"
      - "redis"

  worker:
    build:
      context: ./services/training-service
      dockerfile: Dockerfile
    command: celery worker --app=src.tasks.celery --loglevel=info
    volumes:
      - './services/training-service:/usr/src/app'
    environment:
      - FLASK_DEBUG=1
      - APP_SETTINGS=src.config.DevelopmentConfig
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgresql://admin:admin@database:5432/mrs
    depends_on:
      - "database"
      - "training-service"
      - "redis"

  redis:
    image: redis:6-alpine


  inferenceservice:
    image: noahcha/mrs-inference-service:latest
    ports:
      - 5004:5000
    environment:
      - FLASK_APP=src/__init__.py
      - FLASK_ENV=development
      - APP_SETTINGS=src.config.DevelopmentConfig
      - DATABASE_URL=postgresql://admin:admin@database:5432/mrs
    depends_on:
      - "database"

  free-service:
    image: noahcha/mrs-free-service:latest
    ports:
      - 8081:8080
    environment:
      hosts.gui: "http://localhost"
      hosts.inference: "http://inferenceservice:5000"
      tmdb.api-key: 26787ca3bcec912a4e8f10fa4a1c48d2
      spring.datasource.url: jdbc:postgresql://database:5432/mrs
      spring.datasource.username: admin
      server.port: 8080
      spring.datasource.password: admin
    depends_on:
      - "database"
  member-service:
    image: noahcha/mrs-member-service:latest
    ports:
      - 8080:8080
    environment:
      hosts.gui: "http://localhost"
      spring.datasource.url: jdbc:postgresql://database:5432/mrs
      spring.datasource.username: admin
      spring.datasource.password: admin
    depends_on:
      - "database"
  webapp:
    image: noahcha/mrs-webapp:latest
    ports:
      - 80:80
  database:
   image: postgres:latest
   ports:
     - 5432:5432
   environment:
     POSTGRES_DB: mrs
     POSTGRES_USER: admin
     POSTGRES_PASSWORD: admin

networks:
  default:
    external:
      name: mrs
