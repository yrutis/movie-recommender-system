version: '3.7'
services:
  training-service:
    image: noahcha/mrs-training-service:0.0.1
    environment:
      - FLASK_APP=src/__init__.py
      - FLASK_ENV=development
      - APP_SETTINGS=src.config.DevelopmentConfig
      - DATABASE_URL=postgresql://admin:admin@database:5432/mrs
      - TESTING=0
    restart: always
    depends_on:
      - "database"
  inferenceservice:
    image: noahcha/mrs-inference-service:0.0.1
    environment:
      - FLASK_APP=src/__init__.py
      - FLASK_ENV=development
      - APP_SETTINGS=src.config.DevelopmentConfig
      - DATABASE_URL=postgresql://admin:admin@database:5432/mrs
    restart: always
    depends_on:
      - "database"
  free-service:
    image: noahcha/mrs-free-service:0.0.1
    ports:
      - 8081:8080
    environment:
      hosts.gui: "http://localhost"
      hosts.inference: "http://inferenceservice:5000"
      tmdb.api-key: "Please insert API Key here"
      tmdb.watch-provider-locale: "CH"
      spring.datasource.url: jdbc:postgresql://database:5432/mrs
      spring.datasource.username: admin
      server.port: 8080
      spring.datasource.password: admin
    restart: always
    depends_on:
      - "database"
  member-service:
    image: noahcha/mrs-member-service:0.0.1
    ports:
      - 8080:8080
    environment:
      hosts.gui: "http://localhost"
      hosts.training: "http://training-service:6000"
      tmdb.api-key: "Please insert API Key here"
      tmdb.watch-provider-locale: "CH"
      spring.datasource.url: jdbc:postgresql://database:5432/mrs
      spring.datasource.username: admin
      spring.datasource.password: admin
    restart: always
    depends_on:
      - "database"
  webapp:
    image: noahcha/mrs-webapp:0.0.1
    ports:
      - 80:80
  database:
    image: postgres:13.3
    environment:
      POSTGRES_DB: mrs
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    restart: always

networks:
  default:
    external:
      name: mrs
